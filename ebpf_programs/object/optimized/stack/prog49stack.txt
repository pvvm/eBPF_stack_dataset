
ebpf_programs/object/optimized/prog49.bpf.o:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <test_function>:
;     var0.test1 = var0.test0 * var1;
       0:	bf 10 00 00 00 00 00 00	r0 = r1
       1:	2f 00 00 00 00 00 00 00	r0 *= r0
;     var0.test2 = var0.test1 * var1;
       2:	2f 10 00 00 00 00 00 00	r0 *= r1
;     var0.test3 = var0.test2 * var1;
       3:	2f 10 00 00 00 00 00 00	r0 *= r1
;     var0.test4 = var0.test3 * var1;
       4:	2f 10 00 00 00 00 00 00	r0 *= r1
;     return var0.test4;
       5:	57 00 00 00 ff 00 00 00	r0 &= 255
       6:	95 00 00 00 00 00 00 00	exit

0000000000000038 <test_function3>:
; int test_function3(var2, var3) {
       7:	bf 20 00 00 00 00 00 00	r0 = r2
;     return var2 + var3;
       8:	0f 10 00 00 00 00 00 00	r0 += r1
       9:	95 00 00 00 00 00 00 00	exit

0000000000000050 <test_function2>:
; void test_function2() {
      10:	b7 01 00 00 00 00 00 00	r1 = 0
;     const int key = 0;
      11:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
      12:	bf a2 00 00 00 00 00 00	r2 = r10
      13:	07 02 00 00 fc ff ff ff	r2 += -4
;     __u32 * teste = bpf_map_lookup_elem(&array_map, &key);
      14:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      16:	85 00 00 00 01 00 00 00	call 1
      17:	b7 01 00 00 01 00 00 00	r1 = 1
;     const int key1 = 1;
      18:	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r1
      19:	bf a2 00 00 00 00 00 00	r2 = r10
      20:	07 02 00 00 f8 ff ff ff	r2 += -8
;     __u32 * teste1 = bpf_map_lookup_elem(&array_map, &key1);
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	85 00 00 00 01 00 00 00	call 1
      24:	b7 01 00 00 02 00 00 00	r1 = 2
;     const int key2 = 2;
      25:	63 1a f4 ff 00 00 00 00	*(u32 *)(r10 - 12) = r1
      26:	bf a2 00 00 00 00 00 00	r2 = r10
      27:	07 02 00 00 f4 ff ff ff	r2 += -12
;     __u32 * teste2 = bpf_map_lookup_elem(&array_map, &key2);
      28:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      30:	85 00 00 00 01 00 00 00	call 1
      31:	b7 01 00 00 03 00 00 00	r1 = 3
;     const int key3 = 3;
      32:	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r1
      33:	bf a2 00 00 00 00 00 00	r2 = r10
      34:	07 02 00 00 f0 ff ff ff	r2 += -16
;     __u32 * teste3 = bpf_map_lookup_elem(&array_map, &key3);
      35:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      37:	85 00 00 00 01 00 00 00	call 1
      38:	b7 01 00 00 04 00 00 00	r1 = 4
;     const int key4 = 4;
      39:	63 1a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r1
      40:	bf a2 00 00 00 00 00 00	r2 = r10
      41:	07 02 00 00 ec ff ff ff	r2 += -20
;     __u32 * teste4 = bpf_map_lookup_elem(&array_map, &key4);
      42:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      44:	85 00 00 00 01 00 00 00	call 1
      45:	b7 01 00 00 05 00 00 00	r1 = 5
;     const int key5 = 5;
      46:	63 1a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r1
      47:	bf a2 00 00 00 00 00 00	r2 = r10
      48:	07 02 00 00 e8 ff ff ff	r2 += -24
;     __u32 * teste5 = bpf_map_lookup_elem(&array_map, &key5);
      49:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      51:	85 00 00 00 01 00 00 00	call 1
      52:	b7 01 00 00 06 00 00 00	r1 = 6
;     const int key6 = 6;
      53:	63 1a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r1
      54:	bf a2 00 00 00 00 00 00	r2 = r10
      55:	07 02 00 00 e4 ff ff ff	r2 += -28
;     __u32 * teste6 = bpf_map_lookup_elem(&array_map, &key6);
      56:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      58:	85 00 00 00 01 00 00 00	call 1
; }
      59:	95 00 00 00 00 00 00 00	exit

Disassembly of section xdp:

0000000000000000 <testing_stack>:
; {
       0:	b7 01 00 00 00 00 00 00	r1 = 0
;     const int key = 0;
       1:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       2:	bf a2 00 00 00 00 00 00	r2 = r10
       3:	07 02 00 00 fc ff ff ff	r2 += -4
;     __u32 * teste = bpf_map_lookup_elem(&array_map, &key);
       4:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       6:	85 00 00 00 01 00 00 00	call 1
       7:	b7 01 00 00 01 00 00 00	r1 = 1
;     const int key1 = 1;
       8:	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r1
       9:	bf a2 00 00 00 00 00 00	r2 = r10
      10:	07 02 00 00 f8 ff ff ff	r2 += -8
;     __u32 * teste1 = bpf_map_lookup_elem(&array_map, &key1);
      11:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      13:	85 00 00 00 01 00 00 00	call 1
      14:	b7 01 00 00 02 00 00 00	r1 = 2
;     const int key2 = 2;
      15:	63 1a f4 ff 00 00 00 00	*(u32 *)(r10 - 12) = r1
      16:	bf a2 00 00 00 00 00 00	r2 = r10
      17:	07 02 00 00 f4 ff ff ff	r2 += -12
;     __u32 * teste2 = bpf_map_lookup_elem(&array_map, &key2);
      18:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      20:	85 00 00 00 01 00 00 00	call 1
      21:	b7 01 00 00 03 00 00 00	r1 = 3
;     const int key3 = 3;
      22:	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r1
      23:	bf a2 00 00 00 00 00 00	r2 = r10
      24:	07 02 00 00 f0 ff ff ff	r2 += -16
;     __u32 * teste3 = bpf_map_lookup_elem(&array_map, &key3);
      25:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      27:	85 00 00 00 01 00 00 00	call 1
      28:	b7 01 00 00 04 00 00 00	r1 = 4
;     const int key4 = 4;
      29:	63 1a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r1
      30:	bf a2 00 00 00 00 00 00	r2 = r10
      31:	07 02 00 00 ec ff ff ff	r2 += -20
;     __u32 * teste4 = bpf_map_lookup_elem(&array_map, &key4);
      32:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      34:	85 00 00 00 01 00 00 00	call 1
      35:	b7 01 00 00 05 00 00 00	r1 = 5
;     const int key5 = 5;
      36:	63 1a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r1
      37:	bf a2 00 00 00 00 00 00	r2 = r10
      38:	07 02 00 00 e8 ff ff ff	r2 += -24
;     __u32 * teste5 = bpf_map_lookup_elem(&array_map, &key5);
      39:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      41:	85 00 00 00 01 00 00 00	call 1
      42:	b7 01 00 00 06 00 00 00	r1 = 6
;     const int key6 = 6;
      43:	63 1a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r1
      44:	bf a2 00 00 00 00 00 00	r2 = r10
      45:	07 02 00 00 e4 ff ff ff	r2 += -28
;     __u32 * teste6 = bpf_map_lookup_elem(&array_map, &key6);
      46:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      48:	85 00 00 00 01 00 00 00	call 1
;     return 0;
      49:	b7 00 00 00 00 00 00 00	r0 = 0
      50:	95 00 00 00 00 00 00 00	exit
