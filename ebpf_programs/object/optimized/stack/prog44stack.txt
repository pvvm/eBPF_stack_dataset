
ebpf_programs/object/optimized/prog44.bpf.o:	file format elf64-bpf

Disassembly of section xdp:

0000000000000000 <xdp_prog>:
; 	int index = ctx->rx_queue_index;
       0:	61 11 10 00 00 00 00 00	r1 = *(u32 *)(r1 + 16)
       1:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       2:	bf a2 00 00 00 00 00 00	r2 = r10
       3:	07 02 00 00 fc ff ff ff	r2 += -4
; 	pkt_count = bpf_map_lookup_elem(&xdp_stats_map, &index);
       4:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       6:	85 00 00 00 01 00 00 00	call 1
; 	if (pkt_count) {
       7:	15 00 07 00 00 00 00 00	if r0 == 0 goto +7 <LBB0_2>
; 		if ((*pkt_count)++ & 1)
       8:	61 01 00 00 00 00 00 00	r1 = *(u32 *)(r0 + 0)
       9:	bf 12 00 00 00 00 00 00	r2 = r1
      10:	07 02 00 00 01 00 00 00	r2 += 1
      11:	63 20 00 00 00 00 00 00	*(u32 *)(r0 + 0) = r2
      12:	b7 00 00 00 02 00 00 00	r0 = 2
      13:	57 01 00 00 01 00 00 00	r1 &= 1
      14:	55 01 0d 00 00 00 00 00	if r1 != 0 goto +13 <LBB0_4>

0000000000000078 <LBB0_2>:
      15:	bf a2 00 00 00 00 00 00	r2 = r10
      16:	07 02 00 00 fc ff ff ff	r2 += -4
; 	if (bpf_map_lookup_elem(&xsks_map, &index))
      17:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      19:	85 00 00 00 01 00 00 00	call 1
      20:	bf 01 00 00 00 00 00 00	r1 = r0
      21:	b7 00 00 00 02 00 00 00	r0 = 2
      22:	15 01 05 00 00 00 00 00	if r1 == 0 goto +5 <LBB0_4>
; 		return bpf_redirect_map(&xsks_map, index, 0);
      23:	61 a2 fc ff 00 00 00 00	r2 = *(u32 *)(r10 - 4)
      24:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      26:	b7 03 00 00 00 00 00 00	r3 = 0
      27:	85 00 00 00 33 00 00 00	call 51

00000000000000e0 <LBB0_4>:
; }
      28:	95 00 00 00 00 00 00 00	exit
