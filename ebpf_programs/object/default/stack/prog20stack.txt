
ebpf_programs/object/default/prog20.bpf.o:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <helper>:
; __u8 helper() {
       0:	b7 01 00 00 7b 00 00 00	r1 = 123
;     __u8 var = 123;
       1:	73 1a ff ff 00 00 00 00	*(u8 *)(r10 - 1) = r1
;     if(var != 100) {
       2:	71 a1 ff ff 00 00 00 00	r1 = *(u8 *)(r10 - 1)
       3:	15 01 09 00 64 00 00 00	if r1 == 100 goto +9 <LBB0_2>
       4:	05 00 00 00 00 00 00 00	goto +0 <LBB0_1>

0000000000000028 <LBB0_1>:
       5:	b7 01 00 00 03 00 00 00	r1 = 3
;         __u32 value2 = 3;
       6:	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r1
;         value2 *= 2;
       7:	61 a1 f8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 8)
       8:	67 01 00 00 01 00 00 00	r1 <<= 1
       9:	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r1
      10:	b7 01 00 00 01 00 00 00	r1 = 1
;         var = value2 - value2 + 1;
      11:	73 1a ff ff 00 00 00 00	*(u8 *)(r10 - 1) = r1
;     }
      12:	05 00 00 00 00 00 00 00	goto +0 <LBB0_2>

0000000000000068 <LBB0_2>:
;     return var;
      13:	71 a0 ff ff 00 00 00 00	r0 = *(u8 *)(r10 - 1)
      14:	95 00 00 00 00 00 00 00	exit

Disassembly of section xdp:

0000000000000000 <xdp_prog>:
; int xdp_prog(struct xdp_md *ctx) {
       0:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       1:	b7 01 00 00 01 00 00 00	r1 = 1
;     __u32 this = 1;
       2:	63 1a f4 ff 00 00 00 00	*(u32 *)(r10 - 12) = r1
       3:	b7 01 00 00 00 00 00 00	r1 = 0
;     __u8 value = 0;
       4:	73 1a f3 ff 00 00 00 00	*(u8 *)(r10 - 13) = r1
;     __u64 val2 = value + 1;
       5:	71 a1 f3 ff 00 00 00 00	r1 = *(u8 *)(r10 - 13)
       6:	07 01 00 00 01 00 00 00	r1 += 1
       7:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
;     this += -1;
       8:	61 a1 f4 ff 00 00 00 00	r1 = *(u32 *)(r10 - 12)
       9:	07 01 00 00 ff ff ff ff	r1 += -1
      10:	63 1a f4 ff 00 00 00 00	*(u32 *)(r10 - 12) = r1
;     if(this > value) {
      11:	61 a2 f4 ff 00 00 00 00	r2 = *(u32 *)(r10 - 12)
      12:	71 a1 f3 ff 00 00 00 00	r1 = *(u8 *)(r10 - 13)
      13:	3d 21 12 00 00 00 00 00	if r1 >= r2 goto +18 <LBB1_4>
      14:	05 00 00 00 00 00 00 00	goto +0 <LBB1_1>

0000000000000078 <LBB1_1>:
;         value = 5 + this;
      15:	61 a1 f4 ff 00 00 00 00	r1 = *(u32 *)(r10 - 12)
      16:	07 01 00 00 05 00 00 00	r1 += 5
      17:	73 1a f3 ff 00 00 00 00	*(u8 *)(r10 - 13) = r1
      18:	b7 01 00 00 7b 00 00 00	r1 = 123
;         __u32 testing = 123;
      19:	63 1a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r1
;         testing *= 123;
      20:	61 a1 e4 ff 00 00 00 00	r1 = *(u32 *)(r10 - 28)
      21:	27 01 00 00 7b 00 00 00	r1 *= 123
      22:	63 1a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r1
;         if(this > 1000) {
      23:	61 a2 f4 ff 00 00 00 00	r2 = *(u32 *)(r10 - 12)
      24:	b7 01 00 00 e9 03 00 00	r1 = 1001
      25:	2d 21 04 00 00 00 00 00	if r1 > r2 goto +4 <LBB1_3>
      26:	05 00 00 00 00 00 00 00	goto +0 <LBB1_2>

00000000000000d8 <LBB1_2>:
      27:	b7 01 00 00 01 00 00 00	r1 = 1
;             testing = 1;
      28:	63 1a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r1
;         }
      29:	05 00 00 00 00 00 00 00	goto +0 <LBB1_3>

00000000000000f0 <LBB1_3>:
;         helper();
      30:	85 10 00 00 ff ff ff ff	call -1
;     }
      31:	05 00 00 00 00 00 00 00	goto +0 <LBB1_4>

0000000000000100 <LBB1_4>:
      32:	b7 01 00 00 14 00 00 00	r1 = 20
;     __u8 a = 20;
      33:	73 1a e3 ff 00 00 00 00	*(u8 *)(r10 - 29) = r1
;     a += this;
      34:	61 a2 f4 ff 00 00 00 00	r2 = *(u32 *)(r10 - 12)
      35:	71 a1 e3 ff 00 00 00 00	r1 = *(u8 *)(r10 - 29)
      36:	0f 21 00 00 00 00 00 00	r1 += r2
      37:	73 1a e3 ff 00 00 00 00	*(u8 *)(r10 - 29) = r1
;     a += val2;
      38:	79 a2 e8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 24)
      39:	71 a1 e3 ff 00 00 00 00	r1 = *(u8 *)(r10 - 29)
      40:	0f 21 00 00 00 00 00 00	r1 += r2
      41:	73 1a e3 ff 00 00 00 00	*(u8 *)(r10 - 29) = r1
      42:	b7 00 00 00 01 00 00 00	r0 = 1
;     return XDP_DROP; // Drop all packets
      43:	95 00 00 00 00 00 00 00	exit
